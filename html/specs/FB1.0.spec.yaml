basePath: /api
consumes: [application/json]
definitions:
  FileSystem: {$ref: ../models/FB1.0/file-system.yaml}
  FileSystemSnapshot: {$ref: ../models/FB1.0/file-system-snapshot.yaml}
info: {description: '## Pure Confidential and Proprietary. May be subject to NDA and/or
    End User Agreement.

    A light weight tool to explore the API for FlashBlade, community supported. (http://www.purestorage.com/).  For

    help with this tool, use [Pure1 Community] (https://community.purestorage.com/)
    or the [code-purestorage Slack] (https://community.purestorage.com/discussion/9561/join-the-new-pure-code-slack-team-for-api-and-extensibility-discussions)


    ## Authentication

    Use an api-token (header param) to start a session at /api/login, that returns
    an x-auth-token header which expires in 30 minutes by default. This is

    different than FlashArray, which uses a cookie instead.  The x-auth-token is saved
    and added by the built in proxy server.


    Use "pureadmin create --api-token" on the CLI to create an API Token.  Or use
    "pureadmin list --api-token --expose" to show a token already created.  Note,
    it only shows tokens for user that is logged in.


    ## Proxy

    This Swagger tool includes a proxy server that forwards API calls to the array.  In
    the Swagger UI, you will \

    see curl API calls to IP 127.0.0.1, that is the proxy server. To see the API call
    details view the console output.


    ## Error Codes

    Use HTTP Response codes to determine command results.  Error message json formats
    are different depending on the endpoint.


    ## Official Documention

    Go to the Pure support portal for the [full documentation](https://support.purestorage.com/FlashBlade/Purity_FB/Purity%2F%2F%2F%2FFB_REST_API/Management_REST_API/Management_REST_API_Reference_Guides).',
  title: FlashBlade REST API Client, version: 1.0}
paths:
  /1.0/file-system-snapshots: {$ref: ../paths/FB1.0/file-system-snapshots.path.yaml}
  /1.0/file-systems: {$ref: ../paths/FB1.0/file-systems.path.yaml}
  /api_version:
    get:
      description: Lists supported API versions on this array.
      responses:
        200: {description: List supported API versions}
      tags: [api]
  /login:
    post:
      description: Create a new session with API_KEY
      parameters:
      - {in: header, name: api-token, required: true, type: string}
      responses:
        200:
          description: User logged in
          headers:
            x-auth-token: {description: 'authentication token, pass this back for
                future API Calls.', type: string}
          schema:
            example: {username: pureuser}
            properties:
              username: {description: The user name logged in., type: string}
            type: object
      tags: [auth]
produces: [application/json]
swagger: '2.0'
tags:
- {name: api}
- {name: auth}
- {name: file-systems}
